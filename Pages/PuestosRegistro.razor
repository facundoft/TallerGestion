@page "/PuestosRegistro"
@using TallerGestion.Models
@using TallerGestion.Data
@using TallerGestion.Data.Persistence
@inject AtencionesService atencionservice

<h3>Puestos de Registro</h3>

<form id="cedulaForm" @onsubmit="HandleSubmit">
    <div class="form-group">
        <label for="cedula">Cédula:</label>
        <input type="text" class="form-control" id="cedula" @bind="cedula" required placeholder="Ingrese su cédula">
    </div>
    <button type="submit" class="btn btn-primary">Enviar</button>
</form>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private string cedula;
    private string message;

    // Simulate fetching office ID (later we'll use a hidden field)
    private int OficinaID = 1; // Assume we get this value from the form later

    private async Task HandleSubmit()
    {
        if (IsValidCedula(cedula))
        {
            // Create necessary objects: Cliente, Tramite, and Atencion
            Clientes cliente = new Clientes { CedulaIdentidad = cedula };
            Tramite tramite = new Tramite { DescripcionTramite = "Pendiente de definir" }; // Placeholder description
            Atenciones atencion = new Atenciones(
                                                cliente.ClienteId,
                                                OficinaID,
                                                null,  // PuestoID is null for now
                                                null,  // OperarioID is null for now
                                                tramite.TramiteId,
                                                DateTime.Now, // FechaHoraLlegada
                                                null,  // FechaHoraAtencion
                                                null,  // FechaHoraFinalizacion
                                                "En Espera",  // Estado
                                                0  // SegundaLlamado
                                                );


            // Persist the Atencion object using the service
            await atencionservice.CrearNuevaAtencionAsync(atencion);

            message = $"Cédula '{cedula}' registrada con éxito.";
        }
        else
        {
            message = "Cédula inválida. Inténtalo de nuevo.";
        }
    }

    private bool IsValidCedula(string cedula)
    {
        // Simple cedula validation (8 digits)
        return cedula.Length == 8 && cedula.All(char.IsDigit);
    }
}
